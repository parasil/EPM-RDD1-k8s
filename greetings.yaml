apiVersion: v1
kind: ConfigMap
metadata:
  name: appconfigmap
data:
  myName: "Aleh Charnetski"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      nodeSelector:
        "nodePoolLabel": backendPool
      containers:
      - name: redis
        image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 6379
          name: redis
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
  - port: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: greetings-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: greetings-app
  template:
    metadata:
      labels:
        app: greetings-app
    spec:
      nodeSelector:
        "nodePoolLabel": frontendPool
      imagePullSecrets:
      - name: regcred
      containers:
      - name: greetings-app
        image: acrcharnetski.azurecr.io/greetings:v1
        imagePullPolicy: Always      
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 5000
        env:
        - name: REDIS
          value: "redis"
        - name: NAME
          valueFrom:
            configMapKeyRef:
              name: appconfigmap
              key: myName
        #  value: "Aleh Charnetski"
---
apiVersion: v1
kind: Service
metadata:
  name: greetings-app
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 5000 
  selector:
    app: greetings-app

